[gd_scene load_steps=9 format=2]

[ext_resource path="res://Nodes/UI/StatIndicator.tscn" type="PackedScene" id=1]
[ext_resource path="res://Assets/Sprites/AttackIcon.png" type="Texture" id=2]
[ext_resource path="res://Assets/Sprites/RangeIcon.png" type="Texture" id=3]
[ext_resource path="res://Assets/Sprites/AttackSpeedIcon.png" type="Texture" id=4]
[ext_resource path="res://Assets/Sprites/ShieldIcon.png" type="Texture" id=5]
[ext_resource path="res://Assets/Sprites/MaxHpIcon.png" type="Texture" id=6]
[ext_resource path="res://Assets/Sprites/UpgradeCosticon.png" type="Texture" id=7]

[sub_resource type="GDScript" id=1]
script/source = "extends Control

const anchors = [[0.0, 0.5], [0.5, 1.0], [1.0, 0.5], [0.5, 0.0], [0.5, 0.5]]
var is_open = false
var tween : Tween
var hide_timer : Timer
var show_timer : Timer
var radius = 60
func _ready():
#    for child in get_children():
#        child.anchor_left = 0.5
#        child.anchor_right = 0.5
#        child.anchor_bottom = 0.5
#        child.anchor_top = 0.5
    tween = $\"../Tween\"
    hide_timer = $\"../HideTimer\"
    show_timer = $\"../ShowTimer\"
    
func show():
    if !is_open && show_timer:
        print(\"started\")
        is_open = true
        show_timer.start()

func show_info():
    var time = 0.3
    var trans = Tween.TRANS_CUBIC
    var ease_mode = Tween.EASE_OUT
    visible = true
    is_open = true
    var children = get_children()
    
    for i in get_child_count():
        var angle = (360/get_child_count()) * i
        var goal_pos = Vector2.RIGHT.rotated(deg2rad(angle)) * radius
#        tween.interpolate_property(children[i],
#            \"anchor_top\", children[i].anchor_top, anchors[i][0], time,trans,ease_mode)
#        tween.interpolate_property(children[i],
#            \"anchor_bottom\", children[i].anchor_bottom, anchors[i][0], time,trans,ease_mode)
#        tween.interpolate_property(children[i],
#            \"anchor_left\", children[i].anchor_left, anchors[i][1], time,trans,ease_mode)
#        tween.interpolate_property(children[i],
#            \"anchor_right\", children[i].anchor_right, anchors[i][1], time,trans,ease_mode)
        tween.interpolate_property(children[i],
            \"rect_position\", children[i].rect_position, goal_pos, time,trans,ease_mode)
        tween.interpolate_property(children[i],
            \"modulate:a\", children[i].modulate.a, 1.0, time,trans,ease_mode)
    tween.start()
func hide():
    if(is_open):
        is_open = false
        hide_timer.start()
func hide_info():
    tween.stop_all()
    var time = 0.2
    var trans = Tween.TRANS_CUBIC
    var ease_mode = Tween.EASE_IN
    
    for child in get_children():
#        tween.interpolate_property(child,
#            \"anchor_top\", child.anchor_top, 0.5, time,trans,ease_mode)
#        tween.interpolate_property(child,
#            \"anchor_bottom\", child.anchor_bottom, 0.5, time,trans,ease_mode)
#        tween.interpolate_property(child,
#            \"anchor_left\", child.anchor_left, 0.5, time,trans,ease_mode)
#        tween.interpolate_property(child,
#            \"anchor_right\", child.anchor_right, 0.5, time,trans,ease_mode)tween.interpolate_property(child,
#            \"anchor_right\", child.anchor_right, 0.5, time,trans,ease_mode)
        tween.interpolate_property(child,
                    \"rect_position\", child.rect_position, Vector2.ZERO, time,trans,ease_mode)
        tween.interpolate_property(child,
            \"modulate:a\", child.modulate.a, 0.0, time,trans,ease_mode)
    tween.start()
    yield(tween,\"tween_all_completed\")
    if !is_open:
        visible = false

func quick_hide():
    is_open = false
    hide_info()
    
func quick_show():
    is_open = true 
    show_info()
    
func _on_HideTimer_timeout():
    if(!is_open):
        hide_info()


func _on_ShowTimer_timeout():
    if(is_open):
        show_info()
"

[node name="StatsUpgradeHUD" type="Control"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Container" type="Container" parent="."]
visible = false
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -15.0
margin_top = -10.0
margin_right = -15.0
margin_bottom = -10.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="MaximumAttackingEnemies" parent="Container" instance=ExtResource( 1 )]
margin_right = 20.0
icon_texture = ExtResource( 5 )

[node name="MaxHp" parent="Container" instance=ExtResource( 1 )]
margin_right = 20.0
icon_texture = ExtResource( 6 )

[node name="UpgradeCost" parent="Container" instance=ExtResource( 1 )]
modulate = Color( 0.87, 0.83462, 0.3393, 1 )
margin_right = 20.0
icon_texture = ExtResource( 7 )

[node name="AttackDamage" parent="Container" instance=ExtResource( 1 )]
margin_right = 20.0
icon_texture = ExtResource( 2 )

[node name="AttackSpeed" parent="Container" instance=ExtResource( 1 )]
margin_right = 20.0
icon_texture = ExtResource( 4 )

[node name="AttackRange" parent="Container" instance=ExtResource( 1 )]
margin_right = 20.0
icon_texture = ExtResource( 3 )

[node name="Tween" type="Tween" parent="."]

[node name="HideTimer" type="Timer" parent="."]
wait_time = 0.5
one_shot = true

[node name="ShowTimer" type="Timer" parent="."]
wait_time = 0.25
one_shot = true
[connection signal="timeout" from="HideTimer" to="Container" method="_on_HideTimer_timeout"]
[connection signal="timeout" from="ShowTimer" to="Container" method="_on_ShowTimer_timeout"]
